{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP%20ELITEONE/gigaviz-web/packages/config/src/env.ts"],"sourcesContent":["import { z } from \"zod\";\r\n\r\nconst EnvSchema = z.object({\r\n  NODE_ENV: z.enum([\"development\",\"test\",\"production\"]).default(\"development\"),\r\n  // AI\r\n  OPENAI_API_KEY: z.string().min(1).optional(),\r\n  GEMINI_API_KEY: z.string().min(1).optional(),\r\n  TOPMEDIAAI_API_KEY: z.string().min(1).optional(),\r\n  // Email\r\n  RESEND_API_KEY: z.string().min(1).optional(),\r\n  // Telegram\r\n  TELEGRAM_BOT_TOKEN: z.string().min(1).optional(),\r\n  TELEGRAM_BOT_USERNAME: z.string().min(1).optional(),\r\n  TELEGRAM_WEBHOOK_SECRET: z.string().min(1).optional(),\r\n  TELEGRAM_CHAT_ID_DEFAULT: z.string().optional(),\r\n  // WhatsApp Business\r\n  META_WA_ACCESS_TOKEN: z.string().min(1).optional(),\r\n  META_WA_PHONE_NUMBER_ID: z.string().min(1).optional(),\r\n  META_WA_BUSINESS_ID: z.string().min(1).optional(),\r\n  META_WA_VERIFY_TOKEN: z.string().min(1).optional(),\r\n  META_WA_APP_SECRET: z.string().min(1).optional(),\r\n  // HTTP security\r\n  HTTP_OUTBOUND_ALLOWLIST: z.string().default(\"\"),\r\n  DRY_RUN_HTTP: z.string().default(\"1\"),\r\n});\r\n\r\nexport const env = EnvSchema.parse(process.env);"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,YAAY,2NAAC,CAAC,MAAM,CAAC;IACzB,UAAU,2NAAC,CAAC,IAAI,CAAC;QAAC;QAAc;QAAO;KAAa,EAAE,OAAO,CAAC;IAC9D,KAAK;IACL,gBAAgB,2NAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,QAAQ;IAC1C,gBAAgB,2NAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,QAAQ;IAC1C,oBAAoB,2NAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,QAAQ;IAC9C,QAAQ;IACR,gBAAgB,2NAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,QAAQ;IAC1C,WAAW;IACX,oBAAoB,2NAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,QAAQ;IAC9C,uBAAuB,2NAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,QAAQ;IACjD,yBAAyB,2NAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,QAAQ;IACnD,0BAA0B,2NAAC,CAAC,MAAM,GAAG,QAAQ;IAC7C,oBAAoB;IACpB,sBAAsB,2NAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,QAAQ;IAChD,yBAAyB,2NAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,QAAQ;IACnD,qBAAqB,2NAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,QAAQ;IAC/C,sBAAsB,2NAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,QAAQ;IAChD,oBAAoB,2NAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,QAAQ;IAC9C,gBAAgB;IAChB,yBAAyB,2NAAC,CAAC,MAAM,GAAG,OAAO,CAAC;IAC5C,cAAc,2NAAC,CAAC,MAAM,GAAG,OAAO,CAAC;AACnC;AAEO,MAAM,MAAM,UAAU,KAAK,CAAC,QAAQ,GAAG","debugId":null}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP%20ELITEONE/gigaviz-web/packages/config/src/index.ts"],"sourcesContent":["export * from \"./env\";"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP%20ELITEONE/gigaviz-web/packages/http/src/fetcher.ts"],"sourcesContent":["import { env } from \"@gv/config\";\r\n\r\nconst allow = new Set(env.HTTP_OUTBOUND_ALLOWLIST.split(\",\").map(s=>s.trim()).filter(Boolean));\r\n\r\nexport async function httpFetch(input: RequestInfo, init: RequestInit = {}) {\r\n  const url = typeof input === \"string\" ? new URL(input) : new URL(input.toString());\r\n  if (!allow.has(url.host)) {\r\n    throw new Error(`Outbound host not allowed: ${url.host}`);\r\n  }\r\n  if (env.DRY_RUN_HTTP === \"1\") {\r\n    console.log(\"DRY-RUN HTTP>\", url.toString(), init.method ?? \"GET\");\r\n    return new Response(JSON.stringify({ ok: true, dryRun: true }), { status: 200 });\r\n  }\r\n  return fetch(input, init);\r\n}"],"names":[],"mappings":";;;;AAAA;AAAA;;AAEA,MAAM,QAAQ,IAAI,IAAI,yIAAG,CAAC,uBAAuB,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAA,IAAG,EAAE,IAAI,IAAI,MAAM,CAAC;AAE9E,eAAe,UAAU,KAAkB,EAAE,OAAoB,CAAC,CAAC;IACxE,MAAM,MAAM,OAAO,UAAU,WAAW,IAAI,IAAI,SAAS,IAAI,IAAI,MAAM,QAAQ;IAC/E,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,GAAG;QACxB,MAAM,IAAI,MAAM,CAAC,2BAA2B,EAAE,IAAI,IAAI,EAAE;IAC1D;IACA,IAAI,yIAAG,CAAC,YAAY,KAAK,KAAK;QAC5B,QAAQ,GAAG,CAAC,iBAAiB,IAAI,QAAQ,IAAI,KAAK,MAAM,IAAI;QAC5D,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,IAAI;YAAM,QAAQ;QAAK,IAAI;YAAE,QAAQ;QAAI;IAChF;IACA,OAAO,MAAM,OAAO;AACtB","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HP%20ELITEONE/gigaviz-web/apps/web/app/api/ai-smoke/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { env } from \"@gv/config\";\r\nimport { httpFetch } from \"@gv/http\";\r\n\r\nexport async function GET() {\r\n  const r = await httpFetch(\"https://api.openai.com/v1/chat/completions\", {\r\n    method: \"POST\",\r\n    headers: { \"Authorization\": `Bearer ${env.OPENAI_API_KEY}`, \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ model: \"gpt-4o-mini\", messages: [{role:\"user\", content:\"hi\"}] })\r\n  });\r\n  const json = await r.json();\r\n  return NextResponse.json({ ok: true, via: env.DRY_RUN_HTTP === \"1\" ? \"dry-run\" : \"live\", json });\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AACA;;;;AAEO,eAAe;IACpB,MAAM,IAAI,MAAM,IAAA,iJAAS,EAAC,8CAA8C;QACtE,QAAQ;QACR,SAAS;YAAE,iBAAiB,CAAC,OAAO,EAAE,yIAAG,CAAC,cAAc,EAAE;YAAE,gBAAgB;QAAmB;QAC/F,MAAM,KAAK,SAAS,CAAC;YAAE,OAAO;YAAe,UAAU;gBAAC;oBAAC,MAAK;oBAAQ,SAAQ;gBAAI;aAAE;QAAC;IACvF;IACA,MAAM,OAAO,MAAM,EAAE,IAAI;IACzB,OAAO,+QAAY,CAAC,IAAI,CAAC;QAAE,IAAI;QAAM,KAAK,yIAAG,CAAC,YAAY,KAAK,MAAM,YAAY;QAAQ;IAAK;AAChG","debugId":null}}]
}